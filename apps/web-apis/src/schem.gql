# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserAddress {
  id: ID!
  line1: String!
  line2: String!
  landmark: String!
  district: String!
  state: String!
  pincode: String!
  current: Boolean!
  user: User!
}

type User {
  id: ID!
  fullname: String!
  email: String!
  userType: UserTypes!
  emailVerified: Boolean
  pcis: [Pci]
  addresses: [UserAddress]
}

enum UserTypes {
  PCI_OWNER
  E_VEHICLE_OWNER
}

type GpsCoordinate {
  id: ID!
  latitude: Float!
  longitude: Float!
}

type PciAddress {
  id: ID!
  line1: String!
  line2: String!
  landmark: String!
  district: String!
  state: String!
  pincode: String!
}

type Pci {
  id: ID!
  name: String!
  highwayName: String!
  address: PciAddress!
  gpsCoordinate: GpsCoordinate!
  chargers: [PciCharger!]!
  bookings: [Booking!]!
  owner: User!
}

type Booking {
  id: ID!
  start: DateTime!
  duration: Int!
  status: BookingStatus!
  chargerIndex: Int!
  pci: Pci!
  charger: PciCharger!
  booker: User!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum BookingStatus {
  CONFIRM
  CANCEL
}

type PciCharger {
  id: ID!
  chargerType: ChargerTypes!
  numberOfPlatforms: Int!
  pci: Pci!
}

enum ChargerTypes {
  FAST_CCS
  FAST_CHA_DE_MO
  FAST_TYPE_2_AC
  MODERATE_BHARAT_DC
  SLOW_BHARAT_AC
}

type Query {
  Bookings: [Booking]!
  ChargerType(chargerType: ChargerTypes!): String!
  PciChargers(chargerType: ChargerTypes!): [PciCharger]
  PciCharger(chargerId: ID!): PciCharger!
  Pcis: [Pci]!
  Pci(pciId: ID!): Pci
  OwnerPcis: [Pci]
  UserAddresses: [UserAddress]
  UserAddress(id: ID!): UserAddress!
  Users: [User]!
  JwtToken(login: Login!): JwtToken!
}

"""Jwt Token custom scalar type"""
scalar JwtToken

input Login {
  email: String!
  password: String!
}

type Mutation {
  AddBooking(addBooking: AddBooking!): Booking!
  AddPci(addPci: AddPci!): Pci!
  UpdatePci(id: ID!, updatePci: UpdatePci!): Pci!
  RemoveSameTypePciChargers(pciId: ID!, type: ChargerTypes!): String!
  DeletePci(pciId: ID!): String!
  AddUserAddress(addUserAddress: AddUserAddress!): UserAddress!
  UpdateUserAddress(updateUserAddress: UpdateUserAddress!): UserAddress!
  DeleteUserAddress(id: ID!): String!
  AddUser(addUser: AddUser!): User!
  UpdateUser(updateUser: UpdateUser!): User!
  VerifyEmail(verifyEmail: VerifyEmail!): VerifyEmailMessageTypes!
}

input AddBooking {
  start: DateTime!
  duration: Int!
  chargerIndex: Int!
  chargerId: ID!
}

input AddPci {
  name: String!
  highwayName: String!
  address: AddPciAddress!
  chargers: [AddOrUpdatePciCharger!]!
  gpsCoordinate: AddGpsCoordinates!
}

input AddPciAddress {
  line1: String!
  line2: String!
  landmark: String!
  district: String!
  state: String!
  pincode: String!
}

input AddOrUpdatePciCharger {
  chargerType: ChargerTypes!
  numberOfPlatforms: Int!
}

input AddGpsCoordinates {
  latitude: Float!
  longitude: Float!
}

input UpdatePci {
  name: String
  highwayName: String
  chargers: [AddOrUpdatePciCharger]
  address: UpdatePciAddress
  gpsCoordinate: UpdateGpsCoordinates
}

input UpdatePciAddress {
  line1: String
  line2: String
  landmark: String
  district: String
  state: String
  pincode: String
}

input UpdateGpsCoordinates {
  latitude: Float
  longitude: Float
}

input AddUserAddress {
  line1: String!
  line2: String!
  landmark: String!
  district: String!
  state: String!
  pincode: String!
}

input UpdateUserAddress {
  id: ID!
  current: Boolean
  line1: String
  line2: String
  landmark: String
  district: String
  state: String
  pincode: String
}

input AddUser {
  fullname: String!
  email: String!
  userType: UserTypes!
  emailVerified: Boolean
  password: String!
}

input UpdateUser {
  fullname: String
  email: String
  userType: UserTypes
  emailVerified: Boolean
  password: String
}

enum VerifyEmailMessageTypes {
  INVALID_DETAILS
  EMAIL_VERIFIED
}

input VerifyEmail {
  email: String!
  token: String!
}
